pipeline {
    agent any

    stages {
        stage('Install Nginx app1') {
            steps {
                sshagent(['id_rsa']) {
                    sh '''
                    ssh test@192.168.56.12 "sudo apt-get update && sudo apt-get install nginx -y"
                    '''
                }
            }
        }
        stage('Install PHP and dependencies aap1') {
            steps {
                sshagent(['id_rsa']) {
                    sh '''
                    ssh test@192.168.56.12 "sudo apt-get install php php-fpm php-json php-cli php-opcache php-mbstring php-xml php-gd php-curl php-mysql mysql-client  -y"
                    '''
                }
            }
        }
        stage('Install WordPress on Application Server 1') {
            steps {
                sshagent(['id_rsa']) {
                    sh '''
                    ssh test@192.168.56.12 "sudo apt-get update && sudo apt-get install wget -y"
                    ssh test@192.168.56.12 "wget http://wordpress.org/latest.tar.gz"
                    ssh test@192.168.56.12 "tar -xzvf latest.tar.gz"
                    '''
                    sh '''
                    directory_exists=$(ssh test@192.168.56.12 "[ -d /var/www/html/wordpress/public_html ] && echo 'true' || echo 'false'")
                    if [ "$directory_exists" = "false" ]; then
                        ssh test@192.168.56.12 "sudo mkdir -p /var/www/html/wordpress/public_html"
                        ssh test@192.168.56.12 "sudo mv wordpress/* /var/www/html/wordpress/public_html"
                        ssh test@192.168.56.12 "sudo chown -R www-data:www-data /var/www/html/wordpress"
                        ssh test@192.168.56.12 "sudo chown -R www-data:www-data /var/www/html/wordpress/public_html"
                        ssh test@192.168.56.12 "sudo chmod -R 755 /var/www/html/wordpress/public_html"
                        ssh test@192.168.56.12 "sudo rm -rf wordpress"
                    else
                        echo "Directory already exists, skipping step"
                    fi
                    '''
                }
            }
        }
        stage('Configure WordPress app1') {
            steps {
                sshagent(['id_rsa']) {
                    sh '''
                    ssh test@192.168.56.12 "sudo bash -c 'cd /var/www/html/wordpress/public_html && cp wp-config-sample.php wp-config.php'"
                    ssh test@192.168.56.12 "sudo wget -O /var/www/html/wordpress/public_html/wp-keys.php https://api.wordpress.org/secret-key/1.1/salt/"
                    ssh test@192.168.56.12 "sudo sed -e 's/database_name_here/wordpress/g' -e 's/username_here/wp_user/g' -e 's/password_here/Password#1/g' -e 's/localhost/192.168.56.14/g' -i.bak /var/www/html/wordpress/public_html/wp-config.php"
                    ssh test@192.168.56.12 "sudo sed -i '/#@-/r /var/www/html/wordpress/public_html/wp-keys.php' /var/www/html/wordpress/public_html/wp-config.php"
                    ssh test@192.168.56.12 "sudo chown www-data:www-data /var/www/html/wordpress/public_html/wp-config.php"
                    ssh test@192.168.56.12 "sudo chmod 640 /var/www/html/wordpress/public_html/wp-config.php"
                    ssh test@192.168.56.12 "sudo chmod -R 777 /var/www/html/wordpress"
                    '''
                    sh '''
                    directory_exists=$(ssh test@192.168.56.12 "[ -d /var/www/html/wordpress/public_html/wp-content/uploads ] && echo 'true' || echo 'false'")
                    if [ "$directory_exists" = "false" ]; then
                        ssh test@192.168.56.12 "sudo mkdir /var/www/html/wordpress/public_html/wp-content/uploads"
                        ssh test@192.168.56.12 "sudo chmod 777 /var/www/html/wordpress/public_html/wp-content/uploads"
                        ssh test@192.168.56.12 "sudo chown www-data:www-data /var/www/html/wordpress/public_html/wp-content/uploads"
                    else
                        echo "Directory already exists, skipping step"
                    fi
                    '''
                }
            }
        }
        stage('Configure Nginx for WordPress app1') {
            steps {
                sshagent(['id_rsa']) {
                sh ''' 
                ssh test@192.168.56.12 "sudo curl -o /etc/nginx/sites-available/wordpress https://raw.githubusercontent.com/robertmrb/sed5-s1/master/apps/confnginx"
                ssh test@192.168.56.12 "sudo ln -sf /etc/nginx/sites-available/wordpress /etc/nginx/sites-enabled/"
                '''
                }
            }
        }
        stage('Stop and disable Apache2') {
            steps {
                sshagent(['id_rsa']) {
                sh 'ssh test@192.168.56.12 "sudo systemctl stop apache2.service && sudo systemctl disable apache2.service"'
                }
            }
        }
        stage('Restart Nginx app1') {
            steps {
                sshagent(['id_rsa']) {
                    sh '''
                    ssh test@192.168.56.12 "sudo systemctl restart nginx"
                    '''
                }
            }
        }
        stage('Install Nginx app2') {
            steps {
                sshagent(['id_rsa']) {
                    sh '''
                    ssh test@192.168.56.13 "sudo apt-get update && sudo apt-get install nginx -y"
                    '''
                }
            }
        }
        stage('Install PHP and dependencies aap2') {
            steps {
                sshagent(['id_rsa']) {
                    sh '''
                    ssh test@192.168.56.13 "sudo apt-get install php php-fpm php-json php-cli php-opcache php-mbstring php-xml php-gd php-curl php-mysql mysql-client  -y"
                    '''
                }
            }
        }
        stage('Install WordPress on Application Server 2') {
            steps {
                sshagent(['id_rsa']) {
                    sh '''
                    ssh test@192.168.56.13 "sudo apt-get update && sudo apt-get install wget -y"
                    ssh test@192.168.56.13 "wget http://wordpress.org/latest.tar.gz"
                    ssh test@192.168.56.13 "tar -xzvf latest.tar.gz"
                    '''
                    sh '''
                    directory_exists=$(ssh test@192.168.56.13 "[ -d /var/www/html/wordpress/public_html ] && echo 'true' || echo 'false'")
                    if [ "$directory_exists" = "false" ]; then
                        ssh test@192.168.56.13 "sudo mkdir -p /var/www/html/wordpress/public_html"
                        ssh test@192.168.56.13 "sudo mv wordpress/* /var/www/html/wordpress/public_html"
                        ssh test@192.168.56.13 "sudo chown -R www-data:www-data /var/www/html/wordpress"
                        ssh test@192.168.56.13 "sudo chown -R www-data:www-data /var/www/html/wordpress/public_html"
                        ssh test@192.168.56.13 "sudo chmod -R 755 /var/www/html/wordpress/public_html"
                        ssh test@192.168.56.13 "sudo rm -rf wordpress"
                    else
                        echo "Directory already exists, skipping step"
                    fi
                    '''
                }
            }
        }
        stage('Configure WordPress app2') {
            steps {
                sshagent(['id_rsa']) {
                    sh '''
                    ssh test@192.168.56.13 "sudo bash -c 'cd /var/www/html/wordpress/public_html && cp wp-config-sample.php wp-config.php'"
                    ssh test@192.168.56.13 "sudo wget -O /var/www/html/wordpress/public_html/wp-keys.php https://api.wordpress.org/secret-key/1.1/salt/"
                    ssh test@192.168.56.13 "sudo sed -e 's/database_name_here/wordpress/g' -e 's/username_here/wp_user/g' -e 's/password_here/Password#1/g' -e 's/localhost/192.168.56.14/g' -i.bak /var/www/html/wordpress/public_html/wp-config.php"
                    ssh test@192.168.56.13 "sudo sed -i '/#@-/r /var/www/html/wordpress/public_html/wp-keys.php' /var/www/html/wordpress/public_html/wp-config.php"
                    ssh test@192.168.56.13 "sudo chown www-data:www-data /var/www/html/wordpress/public_html/wp-config.php"
                    ssh test@192.168.56.13 "sudo chmod 640 /var/www/html/wordpress/public_html/wp-config.php"
                    ssh test@192.168.56.13 "sudo chmod -R 777 /var/www/html/wordpress"
                    '''
                    sh '''
                    directory_exists=$(ssh test@192.168.56.13 "[ -d /var/www/html/wordpress/public_html/wp-content/uploads ] && echo 'true' || echo 'false'")
                    if [ "$directory_exists" = "false" ]; then
                        ssh test@192.168.56.13 "sudo mkdir /var/www/html/wordpress/public_html/wp-content/uploads"
                        ssh test@192.168.56.13 "sudo chmod 777 /var/www/html/wordpress/public_html/wp-content/uploads"
                        ssh test@192.168.56.13 "sudo chown www-data:www-data /var/www/html/wordpress/public_html/wp-content/uploads"
                    else
                        echo "Directory already exists, skipping step"
                    fi
                    '''
                }
            }
        }
        stage('Configure Nginx for WordPress app2') {
            steps {
                sshagent(['id_rsa']) {
                sh ''' 
                ssh test@192.168.56.13 "sudo curl -o /etc/nginx/sites-available/wordpress https://raw.githubusercontent.com/robertmrb/sed5-s1/master/apps/confnginx2"
                ssh test@192.168.56.13 "sudo ln -sf /etc/nginx/sites-available/wordpress /etc/nginx/sites-enabled/"
                '''
                }
            }
        }
        stage('Stop and disable Apache2 2') {
            steps {
                sshagent(['id_rsa']) {
                sh 'ssh test@192.168.56.13 "sudo systemctl stop apache2.service && sudo systemctl disable apache2.service"'
                }
            }
        }
        stage('Restart Nginx app2') {
            steps {
                sshagent(['id_rsa']) {
                    sh '''
                    ssh test@192.168.56.13 "sudo systemctl restart nginx"
                    '''
                }
            }
        }
    }
}    
